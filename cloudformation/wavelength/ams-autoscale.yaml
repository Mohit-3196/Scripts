AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Ant Media Server AutoScaling CloudFormation Templates.
  If you have any questions, please just drop a line to contact (at) antmedia.io
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: 'VpcId of your existing Virtual Private Cloud (VPC). The VpcId must be the same as the subnets you choose'
    ConstraintDescription: 'must be the VPC Id of an existing Virtual Private Cloud. The VpcId must be the same as the subnets you choose.'
  EdgeInstanceType:
    Description: Ant Media Server Edge EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.medium
      - t3.xlarge
      - r5.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  OriginInstanceType:
    Description: Ant Media Server Origin EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.medium
      - t3.xlarge
      - r5.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  MongoDBInstanceType:
    Description: Ant Media MongoDB EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.medium
      - t3.xlarge
      - r5.2xlarge
  NginxInstanceType:
    Description: Nginx EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.medium
      - t3.xlarge
      - r5.2xlarge
  NginxIP1:
    Description: 'Nginx Private IP Address.'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.1.200
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x
  NginxIP2:
    Description: 'Nginx Private IP Address'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.1.201
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. If there is no value here, you must create an ssh key (EC2 > Key Pairs).
    Type: 'AWS::EC2::KeyPair::KeyName'
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
  CPUPolicyTargetValue:
    Type: Number
    Default: 40.0
    Description: This parameter for creates new Instances when CPU load exceed to %60.
  VpcCidrBlock:
    Description: 'This CIDR value must be the same as VPC Network(VpcId).'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  AntMediaOriginCapacity:
    Default: '1'
    Description: The initial number of Ant Media Origin instances
    Type: Number
    MinValue: '1'
    MaxValue: '1000'
  AntMediaOriginCapacityMax:
    Default: '10'
    Description: The initial number of Ant Media Origin instances
    Type: Number
    ConstraintDescription: must be between 2 and 20 EC2 instances.
  AntMediaEdgeCapacity:
    Default: '2'
    Description: The initial number of Ant Media Edge instances
    Type: Number
    MinValue: '1'
    MaxValue: '1000'
  AntMediaEdgeCapacityMax:
    Default: '10'
    Description: The initial number of Ant Media Edge instances
    Type: Number
    ConstraintDescription: must be between 2 and 20 EC2 instances.
  OriginSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: 'You must choose at least 2 subnets from the same VPC network.'
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
  EdgeSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: 'You must choose at least 2 subnets from the same VPC network.'
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
  EdgeNetwork:
    Description: 'EdgeNetwork'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.3.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x
  OriginNetwork:
    Description: 'OriginNetwork'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.1.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x
  STUNServerAddress:
    Description: 'STUN Server Address'
    Type: String
    Default: 'stun.wavelength.antmedia.cloud'

Resources:
  DescribeImagesRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DescribeImages
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: ec2:DescribeImages
                Effect: Allow
                Resource: "*"
  GetLatestAMI:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.6
      Handler: index.handler
      Role: !Sub ${DescribeImagesRole.Arn}
      Timeout: 60
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          import json
          import traceback

          def handler(event, context):
            try:
              response = boto3.client('ec2').describe_images(
                  Owners=[event['ResourceProperties']['Owner']],
                  Filters=[
                    {'Name': 'name', 'Values': [event['ResourceProperties']['Name']]},
                    {'Name': 'architecture', 'Values': [event['ResourceProperties']['Architecture']]},
                    {'Name': 'root-device-type', 'Values': ['ebs']},
                  ],
              )

              amis = sorted(response['Images'],
                            key=lambda x: x['CreationDate'],
                            reverse=True)
              id = amis[0]['ImageId']

              cfnresponse.send(event, context, cfnresponse.SUCCESS, {}, id)
            except:
              traceback.print_last()
              cfnresponse.send(event, context, cfnresponse.FAIL, {}, "ok")
  AntMediaAmi:
    Type: Custom::FindAMI
    Properties:
      ServiceToken: !Sub ${GetLatestAMI.Arn}
      Owner: "679593333241"
      Name: "AntMedia-AWS-Marketplace-EE-*"
      Architecture: "x86_64"

  UbuntuAmi:
    Type: Custom::FindAMI
    Properties:
      ServiceToken: !Sub ${GetLatestAMI.Arn}
      Owner: "099720109477"
      Name: "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*"
      Architecture: "x86_64"

  OriginGroup:
      Type: 'AWS::AutoScaling::AutoScalingGroup'
      Properties:
        VPCZoneIdentifier: !Ref OriginSubnets
        LaunchTemplate:
          LaunchTemplateId: !Ref 'OriginLaunchTemplate'
          Version: 1
        MinSize: !Ref AntMediaOriginCapacity
        MaxSize: !Ref AntMediaOriginCapacityMax
        DesiredCapacity: !Ref AntMediaOriginCapacity
        Tags:
        - Key: Name
          Value: Antmedia-Origin
          PropagateAtLaunch: 'true'

      UpdatePolicy:
        AutoScalingReplacingUpdate:
          WillReplace: 'true'
  OriginLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${AWS::StackName}-origin-launch-template-for-auto-scaling'
      LaunchTemplateData:
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociateCarrierIpAddress: true
            Groups:
              - !Ref 'InstanceSecurityGroup'
            DeleteOnTermination: true
        ImageId: ami-03a823e4cd695e13a
        InstanceType: !Ref OriginInstanceType
        KeyName: !Ref 'KeyName'
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            bash /usr/local/antmedia/change_server_mode.sh cluster ${DBInstance.PrivateIp}
            sed -i "s/server.name=/server.name=$(curl -s http://checkip.amazonaws.com)/g" /usr/local/antmedia/conf/red5.properties
            echo "settings.webrtc.stunServerURI=stun:${STUNServerAddress}" >> /usr/local/antmedia/webapps/WebRTCAppEE/WEB-INF/red5-web.properties
            sed -i "s/'urls' : 'stun:.*/'urls' : 'stun:${STUNServerAddress}'/g" /usr/local/antmedia/webapps/WebRTCAppEE/*.html
            sleep 30
            sudo systemctl restart antmedia


  EdgeGroup:
      Type: 'AWS::AutoScaling::AutoScalingGroup'
      Properties:
        VPCZoneIdentifier: !Ref EdgeSubnets
        LaunchTemplate:
          LaunchTemplateId: !Ref 'EdgeLaunchTemplate'
          Version: 1
        MinSize: !Ref AntMediaEdgeCapacity
        MaxSize: !Ref AntMediaEdgeCapacityMax
        DesiredCapacity: !Ref AntMediaEdgeCapacity
        Tags:
        - Key: Name
          Value: Antmedia-Edge
          PropagateAtLaunch: 'true'

      UpdatePolicy:
        AutoScalingReplacingUpdate:
          WillReplace: 'true'
  EdgeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${AWS::StackName}-edge-launch-template-for-auto-scaling'
      LaunchTemplateData:
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociateCarrierIpAddress: true
            Groups:
              - !Ref 'InstanceSecurityGroup'
            DeleteOnTermination: true
        ImageId: ami-03a823e4cd695e13a
        InstanceType: !Ref EdgeInstanceType
        KeyName: !Ref 'KeyName'
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash 
            bash /usr/local/antmedia/change_server_mode.sh cluster ${DBInstance.PrivateIp} 
            sed -i "s/server.name=/server.name=$(curl -s http://checkip.amazonaws.com)/g" /usr/local/antmedia/conf/red5.properties
            echo "settings.webrtc.stunServerURI=stun:${STUNServerAddress}" >> /usr/local/antmedia/webapps/WebRTCAppEE/WEB-INF/red5-web.properties
            sed -i "s/'urls' : 'stun:.*/'urls' : 'stun:${STUNServerAddress}'/g" /usr/local/antmedia/webapps/WebRTCAppEE/*.html 
            sleep 30
            sudo systemctl restart antmedia
  OriginCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref OriginGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: !Ref CPUPolicyTargetValue
  EdgeCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref EdgeGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: !Ref CPUPolicyTargetValue

  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access and HTTP access on the configured port
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5080'
          ToPort: '5080'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5443'
          ToPort: '5443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '1935'
          ToPort: '1935'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: !Ref VpcCidrBlock
        - IpProtocol: udp
          FromPort: '5000'
          ToPort: '65000'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId


  DBEC2SecurityGroup:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
        VpcId: !Ref VpcId
        GroupDescription: MongoDB SecurityGroup
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '27017'
            ToPort: '27017'
            CidrIp: !Ref VpcCidrBlock
          - IpProtocol: tcp
            FromPort: '22'
            ToPort: '22'
            CidrIp: 0.0.0.0/0
  DBInstance:
      Type: 'AWS::EC2::Instance'
      Properties:
        KeyName: !Ref KeyName
        ImageId: !Ref UbuntuAmi
        InstanceType: !Ref MongoDBInstanceType
        NetworkInterfaces:
          - SubnetId: !Select [ 0, !Ref OriginSubnets ]
            AssociateCarrierIpAddress: true
            DeviceIndex: '0'
            GroupSet:
              - Ref: DBEC2SecurityGroup
        Tags:
        - Key: Name
          Value: Antmedia-MongoDB
        UserData:
         Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
            echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu `lsb_release -cs`/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list
            sudo apt-get update
            sudo apt-get install -y mongodb-org python-pip python-setuptools
            sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mongod.conf
            systemctl enable mongod
            systemctl restart mongod


  NginxSecurityGroup:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
        VpcId: !Ref VpcId
        GroupDescription: Nginx SecurityGroup
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '443'
            ToPort: '443'
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: '5443'
            ToPort: '5443'
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: '80'
            ToPort: '80'
            CidrIp: 0.0.0.0/0  
          - IpProtocol: tcp
            FromPort: '22'
            ToPort: '22'
            CidrIp: 0.0.0.0/0

  NginxInstance1:
      Type: 'AWS::EC2::Instance'
      DependsOn: OriginCPUPolicy
      Properties:
        KeyName: !Ref KeyName
        ImageId: !Ref UbuntuAmi
        InstanceType: !Ref NginxInstanceType
        NetworkInterfaces:
          - SubnetId: !Select [ 0, !Ref OriginSubnets ]
            AssociateCarrierIpAddress: true
            DeviceIndex: '0'
            GroupSet:
              - Ref: NginxSecurityGroup
            PrivateIpAddress: !Ref NginxIP1
        Tags:
        - Key: Name
          Value: Nginx-1
        UserData:
         Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            echo "deb http://nginx.org/packages/`lsb_release -d | awk '{print $2}' | tr '[:upper:]' '[:lower:]'` `lsb_release -cs` nginx" \
                | sudo tee /etc/apt/sources.list.d/nginx.list
            curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -
            apt update 
            apt install nginx keepalived unzip jq -y && systemctl enable nginx keepalived
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip && sudo ./aws/install && mkdir ~/.aws/
            cat <<EOF > ~/.aws/credentials
            [default]
            aws_access_key_id = AKIA4J2OAJWTYQRHJ554
            aws_secret_access_key = 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
            EOF
            cat <<EOF > ~/.aws/config
            [default]
            region = us-east-1
            EOF
            cat <<EOF> /etc/keepalived/keepalived.conf
            global_defs {
              # Keepalived process identifier
              router_id nginx
              script_user root
              enable_script_security
            }

            vrrp_script check_nginx
            {
                script "/usr/bin/pgrep nginx"
                interval 5
            }

            vrrp_instance VI_1
            {
                debug 2
                interface ens5
                state MASTER
                virtual_router_id 1
                priority 102
                unicast_src_ip ${NginxIP1}

                unicast_peer
                {
                    ${NginxIP2}
                }

                track_script
                {
                    check_nginx
                }

                notify_master /etc/keepalived/failover.sh
            }
            EOF
            cat <<\EOF > /etc/keepalived/failover.sh
            #!/bin/bash

            ID="eipalloc-0fed1a8bee10ef12b"
            AID="$(aws ec2 describe-addresses | jq ".Addresses[0].AssociationId" | tr -d "\"")"
            INSTANCE_ID="$(curl -s http://169.254.169.254/latest/meta-data/instance-id)"

            /usr/local/bin/aws ec2 disassociate-address --association-id $AID
            /usr/local/bin/aws ec2 associate-address --instance-id $INSTANCE_ID --allocation-id $ID
            EOF
            chmod +x /etc/keepalived/failover.sh
            wget -O /usr/bin/nginx-scale-in.sh https://raw.githubusercontent.com/ant-media/Scripts/nginx_scale-in-out/nginx-scale-in/nginx-scale-in.sh
            wget -O /etc/systemd/system/antmedia-cluster-check.service https://raw.githubusercontent.com/ant-media/Scripts/nginx_scale-in-out/nginx-scale-in/antmedia-cluster-check.service
            sed -i -e "s/^MONGO_DB_IP.*$/MONGO_DB_IP=\"${DBInstance.PrivateIp}\"/g" /usr/bin/nginx-scale-in.sh
            sed -i -e "s|^ORIGIN_NETWORK.*$|ORIGIN_NETWORK=\"${OriginNetwork}\"|g" /usr/bin/nginx-scale-in.sh
            sed -i -e "s|^EDGE_NETWORK.*$|EDGE_NETWORK=\"${EdgeNetwork}\"|g" /usr/bin/nginx-scale-in.sh
            chmod +x /usr/bin/nginx-scale-in.sh
            wget -O /etc/nginx/nginx.conf https://raw.githubusercontent.com/ant-media/Scripts/nginx_scale-in-out/nginx-scale-in/nginx.conf 
            cat <<EOF > /etc/nginx/ams.key
            -----BEGIN PRIVATE KEY-----
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCS5oOFnWHTKqn5
            UrBUm3Ba4qQjqUT15iGQdv4L72u3IBaV6wcHIR4XyU8yPdWkJeDRoHpjkfQojtf0
            1L5rEbpFSC8U0mufjW/VltqSy6EFA1Tg0U8+ghoVAG5O+EnT9dmU1jS84UM9bctn
            7NnO/Nh74Qo98DEtbpq8B2zs3XfWzTOGqUJBy5cDRqJMEHWh3Ug544Ira9VZL3Xg
            Z0Se2Hvr4Fc9pPz960MvI/esSKI6lCvk01+5D1lqMAlXQPL2tu84688VA6D0Oaid
            PcKLa6r1lYOfzWoqGASJMegrkpgUSAiLvahSpmuglFcfVrod9vGE9Fs9ZrghXMs0
            e/eeEb3dAgMBAAECggEAFWm2iDZ9uPtCFY7BF0QlJ4pb5Lray4FFKTq/I1w99k6e
            HDJLLvXb3hnBCpDK4IeI8uWSkYsH7RWNUynjq9XEsi6odj+J4pMKVzcLG1TFXuay
            a6b3BySNyrvqWGaG1HfExJZIz7OCSqUDfl2fDjX7FGukQ40MjhPOSFRIw2ow+sVs
            EUAvXG0PSf6+Qa68KZlxzOjCUI5VpDPVF/Nv/t7Hzcl3osi0MUVLKLid7xSafONx
            M8Z5IUJEIVOoLq4wW1T5tQQl+p6VcKAqH5CJ2bnWqyzWymWpazBuTCZpCPteXBgn
            s92n8kpCNomXa/3q0G1CaYXR4SS2MnGnwSIT5cDPAQKBgQDB9lsTCL9o9KTBcVlZ
            NZFUK5w7tUAk2okwpM0Rdc5wxcHq2CaFZKQbzIgUBlNGtYMNhOs2T+bdP64NMyUK
            w7OGyJsgI70V2F4/jSLvRluUFtLzd3LbTFL/fVzzPx6mzfgGNZ6gFx1EGGrpZIx+
            uSgQmiBLmZZtnZLbeZ9qmyhMnQKBgQDB4rqXnGcc2flCafoVQlCh23Rll5+xLVUC
            6fY5oxwInVywuWpzJqaEFB++dgCtghFADcDaEclXmQ39eM6e+TpsRWOMmAYKEk0D
            ZilrQpsUTBTp83FQfB9J5rKmh4V1iVjUwK/Mm9d/dg09BbUskLpUNSHzoxneb1G3
            RcJlMbxSQQKBgHk5f7JlxTvTqyU7spwO3sW8e+jVX0GpVBUS6xf+iQfykUA1192H
            CQpWyrW5PlLzHvVUHa3UQnYFVsLpND2GEq4qssljjMoacM1HaI4jaxkjKrT/8skc
            6sLDl1RwHrgiAuHeoUVtLN1iZW95aFXLYz79FTIqy9m2ohKJ8Riv4IABAoGBAKGM
            2KrhQC2TFhUXlrBGDEeBQxAvcXlA63e9GFPYK9ClxgjexerixpaA6h5Z1qC8IsF7
            dDh/34Mk3bpZAdkGk36JprQMK+QScacmZdagrfUQm9B/7ugANFXwauVFQJe59JF5
            aEIVjE8BP3CcI+TZRthJWVvXiAOGP9F0x9Bny6HBAoGAMp5zE2KhZ60CzvU2F1eq
            IA0rV+4ORQH1Z6T8/jJeedoLPNHMG5yYFo2dWXymQYViAMamNHw+BxsRuXf/ZXok
            0CH6iTBZ5huWZv2oV481UvrPAAv6bVtnq8lGVU+NpzhlXlhRxH4JXQe3xzjx7ckE
            ugW9WDJcINkdZi0zc5/1sAU=
            -----END PRIVATE KEY-----
            EOF
            cat <<EOF > /etc/nginx/ams.crt
            -----BEGIN CERTIFICATE-----
            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
            -----END CERTIFICATE-----
            -----BEGIN CERTIFICATE-----
            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
            nLRbwHOoq7hHwg==
            -----END CERTIFICATE-----

            -----BEGIN CERTIFICATE-----
            MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/
            MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
            DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow
            TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
            cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB
            AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC
            ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL
            wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D
            LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK
            4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5
            bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y
            sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ
            Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4
            FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc
            SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql
            PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND
            TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
            SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1
            c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx
            +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB
            ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu
            b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E
            U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu
            MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC
            5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW
            9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG
            WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O
            he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC
            Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5
            -----END CERTIFICATE-----
            EOF
            systemctl daemon-reload
            systemctl enable antmedia-cluster-check.service nginx keepalived
            systemctl restart nginx && systemctl restart keepalived
            systemctl start antmedia-cluster-check.service



  NginxInstance2:
      Type: 'AWS::EC2::Instance'
      DependsOn: OriginCPUPolicy
      Properties:
        KeyName: !Ref KeyName
        ImageId: !Ref UbuntuAmi
        InstanceType: !Ref NginxInstanceType
        NetworkInterfaces:
          - SubnetId: !Select [ 0, !Ref OriginSubnets ]
            AssociateCarrierIpAddress: true
            DeviceIndex: '0'
            GroupSet:
              - Ref: NginxSecurityGroup
            PrivateIpAddress: !Ref NginxIP2
        Tags:
        - Key: Name
          Value: Nginx-2
        UserData:
         Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            echo "deb http://nginx.org/packages/`lsb_release -d | awk '{print $2}' | tr '[:upper:]' '[:lower:]'` `lsb_release -cs` nginx" \
                | sudo tee /etc/apt/sources.list.d/nginx.list
            curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -
            apt update 
            apt install nginx keepalived unzip jq -y && systemctl enable nginx keepalived
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip && sudo ./aws/install && mkdir ~/.aws/
            cat <<EOF > ~/.aws/credentials
            [default]
            aws_access_key_id = AKIA4J2OAJWTYQRHJ554
            aws_secret_access_key = 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
            EOF
            cat <<EOF > ~/.aws/config
            [default]
            region = us-east-1
            EOF
                        cat <<EOF> /etc/keepalived/keepalived.conf
            global_defs {
              # Keepalived process identifier
              router_id nginx
              script_user root
              enable_script_security
            }

            vrrp_script check_nginx
            {
                script "/usr/bin/pgrep nginx"
                interval 5
            }

            vrrp_instance VI_1
            {
                debug 2
                interface ens5
                state BACKUP
                virtual_router_id 1
                priority 101
                unicast_src_ip ${NginxIP2}

                unicast_peer
                {
                    ${NginxIP1}
                }

                track_script
                {
                    check_nginx
                }

                notify_master /etc/keepalived/failover.sh
            }
            EOF
            cat <<\EOF > /etc/keepalived/failover.sh
            #!/bin/bash

            ID="eipalloc-0fed1a8bee10ef12b"
            AID="$(aws ec2 describe-addresses | jq ".Addresses[0].AssociationId" | tr -d "\"")"
            INSTANCE_ID="$(curl -s http://169.254.169.254/latest/meta-data/instance-id)"

            /usr/local/bin/aws ec2 disassociate-address --association-id $AID
            /usr/local/bin/aws ec2 associate-address --instance-id $INSTANCE_ID --allocation-id $ID
            EOF
            chmod +x /etc/keepalived/failover.sh
            wget -O /usr/bin/nginx-scale-in.sh https://raw.githubusercontent.com/ant-media/Scripts/nginx_scale-in-out/nginx-scale-in/nginx-scale-in.sh
            wget -O /etc/systemd/system/antmedia-cluster-check.service https://raw.githubusercontent.com/ant-media/Scripts/nginx_scale-in-out/nginx-scale-in/antmedia-cluster-check.service
            sed -i -e "s/^MONGO_DB_IP.*$/MONGO_DB_IP=\"${DBInstance.PrivateIp}\"/g" /usr/bin/nginx-scale-in.sh
            sed -i -e "s|^ORIGIN_NETWORK.*$|ORIGIN_NETWORK=\"${OriginNetwork}\"|g" /usr/bin/nginx-scale-in.sh
            sed -i -e "s|^EDGE_NETWORK.*$|EDGE_NETWORK=\"${EdgeNetwork}\"|g" /usr/bin/nginx-scale-in.sh
            chmod +x /usr/bin/nginx-scale-in.sh
            wget -O /etc/nginx/nginx.conf https://raw.githubusercontent.com/ant-media/Scripts/nginx_scale-in-out/nginx-scale-in/nginx.conf 
            cat <<EOF > /etc/nginx/ams.key
            -----BEGIN PRIVATE KEY-----
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCS5oOFnWHTKqn5
            UrBUm3Ba4qQjqUT15iGQdv4L72u3IBaV6wcHIR4XyU8yPdWkJeDRoHpjkfQojtf0
            1L5rEbpFSC8U0mufjW/VltqSy6EFA1Tg0U8+ghoVAG5O+EnT9dmU1jS84UM9bctn
            7NnO/Nh74Qo98DEtbpq8B2zs3XfWzTOGqUJBy5cDRqJMEHWh3Ug544Ira9VZL3Xg
            Z0Se2Hvr4Fc9pPz960MvI/esSKI6lCvk01+5D1lqMAlXQPL2tu84688VA6D0Oaid
            PcKLa6r1lYOfzWoqGASJMegrkpgUSAiLvahSpmuglFcfVrod9vGE9Fs9ZrghXMs0
            e/eeEb3dAgMBAAECggEAFWm2iDZ9uPtCFY7BF0QlJ4pb5Lray4FFKTq/I1w99k6e
            HDJLLvXb3hnBCpDK4IeI8uWSkYsH7RWNUynjq9XEsi6odj+J4pMKVzcLG1TFXuay
            a6b3BySNyrvqWGaG1HfExJZIz7OCSqUDfl2fDjX7FGukQ40MjhPOSFRIw2ow+sVs
            EUAvXG0PSf6+Qa68KZlxzOjCUI5VpDPVF/Nv/t7Hzcl3osi0MUVLKLid7xSafONx
            M8Z5IUJEIVOoLq4wW1T5tQQl+p6VcKAqH5CJ2bnWqyzWymWpazBuTCZpCPteXBgn
            s92n8kpCNomXa/3q0G1CaYXR4SS2MnGnwSIT5cDPAQKBgQDB9lsTCL9o9KTBcVlZ
            NZFUK5w7tUAk2okwpM0Rdc5wxcHq2CaFZKQbzIgUBlNGtYMNhOs2T+bdP64NMyUK
            w7OGyJsgI70V2F4/jSLvRluUFtLzd3LbTFL/fVzzPx6mzfgGNZ6gFx1EGGrpZIx+
            uSgQmiBLmZZtnZLbeZ9qmyhMnQKBgQDB4rqXnGcc2flCafoVQlCh23Rll5+xLVUC
            6fY5oxwInVywuWpzJqaEFB++dgCtghFADcDaEclXmQ39eM6e+TpsRWOMmAYKEk0D
            ZilrQpsUTBTp83FQfB9J5rKmh4V1iVjUwK/Mm9d/dg09BbUskLpUNSHzoxneb1G3
            RcJlMbxSQQKBgHk5f7JlxTvTqyU7spwO3sW8e+jVX0GpVBUS6xf+iQfykUA1192H
            CQpWyrW5PlLzHvVUHa3UQnYFVsLpND2GEq4qssljjMoacM1HaI4jaxkjKrT/8skc
            6sLDl1RwHrgiAuHeoUVtLN1iZW95aFXLYz79FTIqy9m2ohKJ8Riv4IABAoGBAKGM
            2KrhQC2TFhUXlrBGDEeBQxAvcXlA63e9GFPYK9ClxgjexerixpaA6h5Z1qC8IsF7
            dDh/34Mk3bpZAdkGk36JprQMK+QScacmZdagrfUQm9B/7ugANFXwauVFQJe59JF5
            aEIVjE8BP3CcI+TZRthJWVvXiAOGP9F0x9Bny6HBAoGAMp5zE2KhZ60CzvU2F1eq
            IA0rV+4ORQH1Z6T8/jJeedoLPNHMG5yYFo2dWXymQYViAMamNHw+BxsRuXf/ZXok
            0CH6iTBZ5huWZv2oV481UvrPAAv6bVtnq8lGVU+NpzhlXlhRxH4JXQe3xzjx7ckE
            ugW9WDJcINkdZi0zc5/1sAU=
            -----END PRIVATE KEY-----
            EOF
            cat <<EOF > /etc/nginx/ams.crt
            -----BEGIN CERTIFICATE-----
            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
            -----END CERTIFICATE-----
            -----BEGIN CERTIFICATE-----
            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
            nLRbwHOoq7hHwg==
            -----END CERTIFICATE-----

            -----BEGIN CERTIFICATE-----
            MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/
            MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
            DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow
            TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
            cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB
            AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC
            ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL
            wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D
            LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK
            4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5
            bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y
            sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ
            Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4
            FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc
            SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql
            PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND
            TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
            SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1
            c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx
            +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB
            ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu
            b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E
            U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu
            MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC
            5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW
            9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG
            WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O
            he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC
            Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5
            -----END CERTIFICATE-----
            EOF
            systemctl daemon-reload
            systemctl enable antmedia-cluster-check.service nginx keepalived
            systemctl restart nginx && systemctl restart keepalived
            systemctl start antmedia-cluster-check.service

